// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "packet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace packet {

namespace {

const ::google::protobuf::Descriptor* InItPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InItPacket_reflection_ = NULL;
const ::google::protobuf::Descriptor* DefaultPosPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DefaultPosPacket_reflection_ = NULL;
const ::google::protobuf::Descriptor* CameraPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CameraPacket_reflection_ = NULL;
const ::google::protobuf::Descriptor* ImagePacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ImagePacket_reflection_ = NULL;
const ::google::protobuf::Descriptor* EndingPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EndingPacket_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PacketType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_packet_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_packet_2eproto() {
  protobuf_AddDesc_packet_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "packet.proto");
  GOOGLE_CHECK(file != NULL);
  InItPacket_descriptor_ = file->message_type(0);
  static const int InItPacket_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InItPacket, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InItPacket, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InItPacket, hight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InItPacket, moduleid_),
  };
  InItPacket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InItPacket_descriptor_,
      InItPacket::default_instance_,
      InItPacket_offsets_,
      -1,
      -1,
      -1,
      sizeof(InItPacket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InItPacket, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InItPacket, _is_default_instance_));
  DefaultPosPacket_descriptor_ = file->message_type(1);
  static const int DefaultPosPacket_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultPosPacket, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultPosPacket, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultPosPacket, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultPosPacket, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultPosPacket, vx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultPosPacket, vy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultPosPacket, vz_),
  };
  DefaultPosPacket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DefaultPosPacket_descriptor_,
      DefaultPosPacket::default_instance_,
      DefaultPosPacket_offsets_,
      -1,
      -1,
      -1,
      sizeof(DefaultPosPacket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultPosPacket, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultPosPacket, _is_default_instance_));
  CameraPacket_descriptor_ = file->message_type(2);
  static const int CameraPacket_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraPacket, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraPacket, serialnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraPacket, delta_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraPacket, delta_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraPacket, delta_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraPacket, delta_vx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraPacket, delta_vy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraPacket, delta_vz_),
  };
  CameraPacket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CameraPacket_descriptor_,
      CameraPacket::default_instance_,
      CameraPacket_offsets_,
      -1,
      -1,
      -1,
      sizeof(CameraPacket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraPacket, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraPacket, _is_default_instance_));
  ImagePacket_descriptor_ = file->message_type(3);
  static const int ImagePacket_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImagePacket, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImagePacket, serialnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImagePacket, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImagePacket, size_),
  };
  ImagePacket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ImagePacket_descriptor_,
      ImagePacket::default_instance_,
      ImagePacket_offsets_,
      -1,
      -1,
      -1,
      sizeof(ImagePacket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImagePacket, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImagePacket, _is_default_instance_));
  EndingPacket_descriptor_ = file->message_type(4);
  static const int EndingPacket_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndingPacket, type_),
  };
  EndingPacket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EndingPacket_descriptor_,
      EndingPacket::default_instance_,
      EndingPacket_offsets_,
      -1,
      -1,
      -1,
      sizeof(EndingPacket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndingPacket, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndingPacket, _is_default_instance_));
  PacketType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_packet_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InItPacket_descriptor_, &InItPacket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DefaultPosPacket_descriptor_, &DefaultPosPacket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CameraPacket_descriptor_, &CameraPacket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ImagePacket_descriptor_, &ImagePacket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EndingPacket_descriptor_, &EndingPacket::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_packet_2eproto() {
  delete InItPacket::default_instance_;
  delete InItPacket_reflection_;
  delete DefaultPosPacket::default_instance_;
  delete DefaultPosPacket_reflection_;
  delete CameraPacket::default_instance_;
  delete CameraPacket_reflection_;
  delete ImagePacket::default_instance_;
  delete ImagePacket_reflection_;
  delete EndingPacket::default_instance_;
  delete EndingPacket_reflection_;
}

void protobuf_AddDesc_packet_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_packet_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014packet.proto\022\006packet\"^\n\nInItPacket\022 \n\004"
    "type\030\001 \001(\0162\022.packet.PacketType\022\r\n\005width\030"
    "\002 \001(\r\022\r\n\005hight\030\003 \001(\r\022\020\n\010moduleID\030\004 \001(\r\"y"
    "\n\020DefaultPosPacket\022 \n\004type\030\001 \001(\0162\022.packe"
    "t.PacketType\022\t\n\001x\030\002 \001(\r\022\t\n\001y\030\003 \001(\r\022\t\n\001z\030"
    "\004 \001(\r\022\n\n\002vx\030\005 \001(\r\022\n\n\002vy\030\006 \001(\r\022\n\n\002vz\030\007 \001("
    "\r\"\257\001\n\014CameraPacket\022 \n\004type\030\001 \001(\0162\022.packe"
    "t.PacketType\022\024\n\014serialNumber\030\002 \001(\r\022\017\n\007de"
    "lta_x\030\003 \001(\r\022\017\n\007delta_y\030\004 \001(\r\022\017\n\007delta_z\030"
    "\005 \001(\r\022\020\n\010delta_vx\030\006 \001(\r\022\020\n\010delta_vy\030\007 \001("
    "\r\022\020\n\010delta_vz\030\010 \001(\r\"c\n\013ImagePacket\022 \n\004ty"
    "pe\030\001 \001(\0162\022.packet.PacketType\022\024\n\014serialNu"
    "mber\030\002 \001(\r\022\016\n\006status\030\003 \001(\r\022\014\n\004size\030\004 \001(\r"
    "\"0\n\014EndingPacket\022 \n\004type\030\001 \001(\0162\022.packet."
    "PacketType*]\n\nPacketType\022\014\n\010PkktInit\020\000\022\021"
    "\n\rPktDefaultPos\020\001\022\021\n\rPktCameraInfo\020\002\022\014\n\010"
    "PktImage\020\003\022\r\n\tPktEnding\020\004b\006proto3", 673);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "packet.proto", &protobuf_RegisterTypes);
  InItPacket::default_instance_ = new InItPacket();
  DefaultPosPacket::default_instance_ = new DefaultPosPacket();
  CameraPacket::default_instance_ = new CameraPacket();
  ImagePacket::default_instance_ = new ImagePacket();
  EndingPacket::default_instance_ = new EndingPacket();
  InItPacket::default_instance_->InitAsDefaultInstance();
  DefaultPosPacket::default_instance_->InitAsDefaultInstance();
  CameraPacket::default_instance_->InitAsDefaultInstance();
  ImagePacket::default_instance_->InitAsDefaultInstance();
  EndingPacket::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_packet_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_packet_2eproto {
  StaticDescriptorInitializer_packet_2eproto() {
    protobuf_AddDesc_packet_2eproto();
  }
} static_descriptor_initializer_packet_2eproto_;
const ::google::protobuf::EnumDescriptor* PacketType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacketType_descriptor_;
}
bool PacketType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InItPacket::kTypeFieldNumber;
const int InItPacket::kWidthFieldNumber;
const int InItPacket::kHightFieldNumber;
const int InItPacket::kModuleIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InItPacket::InItPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.InItPacket)
}

void InItPacket::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

InItPacket::InItPacket(const InItPacket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet.InItPacket)
}

void InItPacket::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
  width_ = 0u;
  hight_ = 0u;
  moduleid_ = 0u;
}

InItPacket::~InItPacket() {
  // @@protoc_insertion_point(destructor:packet.InItPacket)
  SharedDtor();
}

void InItPacket::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InItPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InItPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InItPacket_descriptor_;
}

const InItPacket& InItPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_packet_2eproto();
  return *default_instance_;
}

InItPacket* InItPacket::default_instance_ = NULL;

InItPacket* InItPacket::New(::google::protobuf::Arena* arena) const {
  InItPacket* n = new InItPacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InItPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.InItPacket)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(InItPacket, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InItPacket*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, moduleid_);

#undef ZR_HELPER_
#undef ZR_

}

bool InItPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.InItPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .packet.PacketType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::packet::PacketType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_width;
        break;
      }

      // optional uint32 width = 2;
      case 2: {
        if (tag == 16) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hight;
        break;
      }

      // optional uint32 hight = 3;
      case 3: {
        if (tag == 24) {
         parse_hight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hight_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_moduleID;
        break;
      }

      // optional uint32 moduleID = 4;
      case 4: {
        if (tag == 32) {
         parse_moduleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &moduleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.InItPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.InItPacket)
  return false;
#undef DO_
}

void InItPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.InItPacket)
  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional uint32 width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->width(), output);
  }

  // optional uint32 hight = 3;
  if (this->hight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hight(), output);
  }

  // optional uint32 moduleID = 4;
  if (this->moduleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->moduleid(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet.InItPacket)
}

::google::protobuf::uint8* InItPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.InItPacket)
  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional uint32 width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->width(), target);
  }

  // optional uint32 hight = 3;
  if (this->hight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hight(), target);
  }

  // optional uint32 moduleID = 4;
  if (this->moduleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->moduleid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet.InItPacket)
  return target;
}

int InItPacket::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet.InItPacket)
  int total_size = 0;

  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional uint32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // optional uint32 hight = 3;
  if (this->hight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hight());
  }

  // optional uint32 moduleID = 4;
  if (this->moduleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->moduleid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InItPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.InItPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InItPacket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InItPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.InItPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.InItPacket)
    MergeFrom(*source);
  }
}

void InItPacket::MergeFrom(const InItPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.InItPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.hight() != 0) {
    set_hight(from.hight());
  }
  if (from.moduleid() != 0) {
    set_moduleid(from.moduleid());
  }
}

void InItPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.InItPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InItPacket::CopyFrom(const InItPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.InItPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InItPacket::IsInitialized() const {

  return true;
}

void InItPacket::Swap(InItPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InItPacket::InternalSwap(InItPacket* other) {
  std::swap(type_, other->type_);
  std::swap(width_, other->width_);
  std::swap(hight_, other->hight_);
  std::swap(moduleid_, other->moduleid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InItPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InItPacket_descriptor_;
  metadata.reflection = InItPacket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InItPacket

// optional .packet.PacketType type = 1;
void InItPacket::clear_type() {
  type_ = 0;
}
 ::packet::PacketType InItPacket::type() const {
  // @@protoc_insertion_point(field_get:packet.InItPacket.type)
  return static_cast< ::packet::PacketType >(type_);
}
 void InItPacket::set_type(::packet::PacketType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:packet.InItPacket.type)
}

// optional uint32 width = 2;
void InItPacket::clear_width() {
  width_ = 0u;
}
 ::google::protobuf::uint32 InItPacket::width() const {
  // @@protoc_insertion_point(field_get:packet.InItPacket.width)
  return width_;
}
 void InItPacket::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:packet.InItPacket.width)
}

// optional uint32 hight = 3;
void InItPacket::clear_hight() {
  hight_ = 0u;
}
 ::google::protobuf::uint32 InItPacket::hight() const {
  // @@protoc_insertion_point(field_get:packet.InItPacket.hight)
  return hight_;
}
 void InItPacket::set_hight(::google::protobuf::uint32 value) {
  
  hight_ = value;
  // @@protoc_insertion_point(field_set:packet.InItPacket.hight)
}

// optional uint32 moduleID = 4;
void InItPacket::clear_moduleid() {
  moduleid_ = 0u;
}
 ::google::protobuf::uint32 InItPacket::moduleid() const {
  // @@protoc_insertion_point(field_get:packet.InItPacket.moduleID)
  return moduleid_;
}
 void InItPacket::set_moduleid(::google::protobuf::uint32 value) {
  
  moduleid_ = value;
  // @@protoc_insertion_point(field_set:packet.InItPacket.moduleID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DefaultPosPacket::kTypeFieldNumber;
const int DefaultPosPacket::kXFieldNumber;
const int DefaultPosPacket::kYFieldNumber;
const int DefaultPosPacket::kZFieldNumber;
const int DefaultPosPacket::kVxFieldNumber;
const int DefaultPosPacket::kVyFieldNumber;
const int DefaultPosPacket::kVzFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DefaultPosPacket::DefaultPosPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.DefaultPosPacket)
}

void DefaultPosPacket::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DefaultPosPacket::DefaultPosPacket(const DefaultPosPacket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet.DefaultPosPacket)
}

void DefaultPosPacket::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
  x_ = 0u;
  y_ = 0u;
  z_ = 0u;
  vx_ = 0u;
  vy_ = 0u;
  vz_ = 0u;
}

DefaultPosPacket::~DefaultPosPacket() {
  // @@protoc_insertion_point(destructor:packet.DefaultPosPacket)
  SharedDtor();
}

void DefaultPosPacket::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DefaultPosPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DefaultPosPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DefaultPosPacket_descriptor_;
}

const DefaultPosPacket& DefaultPosPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_packet_2eproto();
  return *default_instance_;
}

DefaultPosPacket* DefaultPosPacket::default_instance_ = NULL;

DefaultPosPacket* DefaultPosPacket::New(::google::protobuf::Arena* arena) const {
  DefaultPosPacket* n = new DefaultPosPacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DefaultPosPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.DefaultPosPacket)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DefaultPosPacket, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DefaultPosPacket*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, vz_);

#undef ZR_HELPER_
#undef ZR_

}

bool DefaultPosPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.DefaultPosPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .packet.PacketType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::packet::PacketType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_x;
        break;
      }

      // optional uint32 x = 2;
      case 2: {
        if (tag == 16) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_y;
        break;
      }

      // optional uint32 y = 3;
      case 3: {
        if (tag == 24) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_z;
        break;
      }

      // optional uint32 z = 4;
      case 4: {
        if (tag == 32) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_vx;
        break;
      }

      // optional uint32 vx = 5;
      case 5: {
        if (tag == 40) {
         parse_vx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_vy;
        break;
      }

      // optional uint32 vy = 6;
      case 6: {
        if (tag == 48) {
         parse_vy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_vz;
        break;
      }

      // optional uint32 vz = 7;
      case 7: {
        if (tag == 56) {
         parse_vz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vz_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.DefaultPosPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.DefaultPosPacket)
  return false;
#undef DO_
}

void DefaultPosPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.DefaultPosPacket)
  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional uint32 x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->x(), output);
  }

  // optional uint32 y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->y(), output);
  }

  // optional uint32 z = 4;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->z(), output);
  }

  // optional uint32 vx = 5;
  if (this->vx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->vx(), output);
  }

  // optional uint32 vy = 6;
  if (this->vy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->vy(), output);
  }

  // optional uint32 vz = 7;
  if (this->vz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->vz(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet.DefaultPosPacket)
}

::google::protobuf::uint8* DefaultPosPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.DefaultPosPacket)
  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional uint32 x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->x(), target);
  }

  // optional uint32 y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->y(), target);
  }

  // optional uint32 z = 4;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->z(), target);
  }

  // optional uint32 vx = 5;
  if (this->vx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->vx(), target);
  }

  // optional uint32 vy = 6;
  if (this->vy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->vy(), target);
  }

  // optional uint32 vz = 7;
  if (this->vz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->vz(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet.DefaultPosPacket)
  return target;
}

int DefaultPosPacket::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet.DefaultPosPacket)
  int total_size = 0;

  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional uint32 x = 2;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x());
  }

  // optional uint32 y = 3;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->y());
  }

  // optional uint32 z = 4;
  if (this->z() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->z());
  }

  // optional uint32 vx = 5;
  if (this->vx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vx());
  }

  // optional uint32 vy = 6;
  if (this->vy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vy());
  }

  // optional uint32 vz = 7;
  if (this->vz() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vz());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DefaultPosPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.DefaultPosPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DefaultPosPacket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DefaultPosPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.DefaultPosPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.DefaultPosPacket)
    MergeFrom(*source);
  }
}

void DefaultPosPacket::MergeFrom(const DefaultPosPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.DefaultPosPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.vx() != 0) {
    set_vx(from.vx());
  }
  if (from.vy() != 0) {
    set_vy(from.vy());
  }
  if (from.vz() != 0) {
    set_vz(from.vz());
  }
}

void DefaultPosPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.DefaultPosPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DefaultPosPacket::CopyFrom(const DefaultPosPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.DefaultPosPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefaultPosPacket::IsInitialized() const {

  return true;
}

void DefaultPosPacket::Swap(DefaultPosPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DefaultPosPacket::InternalSwap(DefaultPosPacket* other) {
  std::swap(type_, other->type_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(vx_, other->vx_);
  std::swap(vy_, other->vy_);
  std::swap(vz_, other->vz_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DefaultPosPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DefaultPosPacket_descriptor_;
  metadata.reflection = DefaultPosPacket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DefaultPosPacket

// optional .packet.PacketType type = 1;
void DefaultPosPacket::clear_type() {
  type_ = 0;
}
 ::packet::PacketType DefaultPosPacket::type() const {
  // @@protoc_insertion_point(field_get:packet.DefaultPosPacket.type)
  return static_cast< ::packet::PacketType >(type_);
}
 void DefaultPosPacket::set_type(::packet::PacketType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:packet.DefaultPosPacket.type)
}

// optional uint32 x = 2;
void DefaultPosPacket::clear_x() {
  x_ = 0u;
}
 ::google::protobuf::uint32 DefaultPosPacket::x() const {
  // @@protoc_insertion_point(field_get:packet.DefaultPosPacket.x)
  return x_;
}
 void DefaultPosPacket::set_x(::google::protobuf::uint32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:packet.DefaultPosPacket.x)
}

// optional uint32 y = 3;
void DefaultPosPacket::clear_y() {
  y_ = 0u;
}
 ::google::protobuf::uint32 DefaultPosPacket::y() const {
  // @@protoc_insertion_point(field_get:packet.DefaultPosPacket.y)
  return y_;
}
 void DefaultPosPacket::set_y(::google::protobuf::uint32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:packet.DefaultPosPacket.y)
}

// optional uint32 z = 4;
void DefaultPosPacket::clear_z() {
  z_ = 0u;
}
 ::google::protobuf::uint32 DefaultPosPacket::z() const {
  // @@protoc_insertion_point(field_get:packet.DefaultPosPacket.z)
  return z_;
}
 void DefaultPosPacket::set_z(::google::protobuf::uint32 value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:packet.DefaultPosPacket.z)
}

// optional uint32 vx = 5;
void DefaultPosPacket::clear_vx() {
  vx_ = 0u;
}
 ::google::protobuf::uint32 DefaultPosPacket::vx() const {
  // @@protoc_insertion_point(field_get:packet.DefaultPosPacket.vx)
  return vx_;
}
 void DefaultPosPacket::set_vx(::google::protobuf::uint32 value) {
  
  vx_ = value;
  // @@protoc_insertion_point(field_set:packet.DefaultPosPacket.vx)
}

// optional uint32 vy = 6;
void DefaultPosPacket::clear_vy() {
  vy_ = 0u;
}
 ::google::protobuf::uint32 DefaultPosPacket::vy() const {
  // @@protoc_insertion_point(field_get:packet.DefaultPosPacket.vy)
  return vy_;
}
 void DefaultPosPacket::set_vy(::google::protobuf::uint32 value) {
  
  vy_ = value;
  // @@protoc_insertion_point(field_set:packet.DefaultPosPacket.vy)
}

// optional uint32 vz = 7;
void DefaultPosPacket::clear_vz() {
  vz_ = 0u;
}
 ::google::protobuf::uint32 DefaultPosPacket::vz() const {
  // @@protoc_insertion_point(field_get:packet.DefaultPosPacket.vz)
  return vz_;
}
 void DefaultPosPacket::set_vz(::google::protobuf::uint32 value) {
  
  vz_ = value;
  // @@protoc_insertion_point(field_set:packet.DefaultPosPacket.vz)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CameraPacket::kTypeFieldNumber;
const int CameraPacket::kSerialNumberFieldNumber;
const int CameraPacket::kDeltaXFieldNumber;
const int CameraPacket::kDeltaYFieldNumber;
const int CameraPacket::kDeltaZFieldNumber;
const int CameraPacket::kDeltaVxFieldNumber;
const int CameraPacket::kDeltaVyFieldNumber;
const int CameraPacket::kDeltaVzFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CameraPacket::CameraPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.CameraPacket)
}

void CameraPacket::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CameraPacket::CameraPacket(const CameraPacket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet.CameraPacket)
}

void CameraPacket::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
  serialnumber_ = 0u;
  delta_x_ = 0u;
  delta_y_ = 0u;
  delta_z_ = 0u;
  delta_vx_ = 0u;
  delta_vy_ = 0u;
  delta_vz_ = 0u;
}

CameraPacket::~CameraPacket() {
  // @@protoc_insertion_point(destructor:packet.CameraPacket)
  SharedDtor();
}

void CameraPacket::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CameraPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CameraPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CameraPacket_descriptor_;
}

const CameraPacket& CameraPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_packet_2eproto();
  return *default_instance_;
}

CameraPacket* CameraPacket::default_instance_ = NULL;

CameraPacket* CameraPacket::New(::google::protobuf::Arena* arena) const {
  CameraPacket* n = new CameraPacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CameraPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.CameraPacket)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CameraPacket, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CameraPacket*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, delta_vz_);

#undef ZR_HELPER_
#undef ZR_

}

bool CameraPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.CameraPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .packet.PacketType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::packet::PacketType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_serialNumber;
        break;
      }

      // optional uint32 serialNumber = 2;
      case 2: {
        if (tag == 16) {
         parse_serialNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serialnumber_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_delta_x;
        break;
      }

      // optional uint32 delta_x = 3;
      case 3: {
        if (tag == 24) {
         parse_delta_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delta_x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_delta_y;
        break;
      }

      // optional uint32 delta_y = 4;
      case 4: {
        if (tag == 32) {
         parse_delta_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delta_y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_delta_z;
        break;
      }

      // optional uint32 delta_z = 5;
      case 5: {
        if (tag == 40) {
         parse_delta_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delta_z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_delta_vx;
        break;
      }

      // optional uint32 delta_vx = 6;
      case 6: {
        if (tag == 48) {
         parse_delta_vx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delta_vx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_delta_vy;
        break;
      }

      // optional uint32 delta_vy = 7;
      case 7: {
        if (tag == 56) {
         parse_delta_vy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delta_vy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_delta_vz;
        break;
      }

      // optional uint32 delta_vz = 8;
      case 8: {
        if (tag == 64) {
         parse_delta_vz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delta_vz_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.CameraPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.CameraPacket)
  return false;
#undef DO_
}

void CameraPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.CameraPacket)
  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional uint32 serialNumber = 2;
  if (this->serialnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->serialnumber(), output);
  }

  // optional uint32 delta_x = 3;
  if (this->delta_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->delta_x(), output);
  }

  // optional uint32 delta_y = 4;
  if (this->delta_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->delta_y(), output);
  }

  // optional uint32 delta_z = 5;
  if (this->delta_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->delta_z(), output);
  }

  // optional uint32 delta_vx = 6;
  if (this->delta_vx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->delta_vx(), output);
  }

  // optional uint32 delta_vy = 7;
  if (this->delta_vy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->delta_vy(), output);
  }

  // optional uint32 delta_vz = 8;
  if (this->delta_vz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->delta_vz(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet.CameraPacket)
}

::google::protobuf::uint8* CameraPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.CameraPacket)
  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional uint32 serialNumber = 2;
  if (this->serialnumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->serialnumber(), target);
  }

  // optional uint32 delta_x = 3;
  if (this->delta_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->delta_x(), target);
  }

  // optional uint32 delta_y = 4;
  if (this->delta_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->delta_y(), target);
  }

  // optional uint32 delta_z = 5;
  if (this->delta_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->delta_z(), target);
  }

  // optional uint32 delta_vx = 6;
  if (this->delta_vx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->delta_vx(), target);
  }

  // optional uint32 delta_vy = 7;
  if (this->delta_vy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->delta_vy(), target);
  }

  // optional uint32 delta_vz = 8;
  if (this->delta_vz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->delta_vz(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet.CameraPacket)
  return target;
}

int CameraPacket::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet.CameraPacket)
  int total_size = 0;

  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional uint32 serialNumber = 2;
  if (this->serialnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serialnumber());
  }

  // optional uint32 delta_x = 3;
  if (this->delta_x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delta_x());
  }

  // optional uint32 delta_y = 4;
  if (this->delta_y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delta_y());
  }

  // optional uint32 delta_z = 5;
  if (this->delta_z() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delta_z());
  }

  // optional uint32 delta_vx = 6;
  if (this->delta_vx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delta_vx());
  }

  // optional uint32 delta_vy = 7;
  if (this->delta_vy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delta_vy());
  }

  // optional uint32 delta_vz = 8;
  if (this->delta_vz() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delta_vz());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CameraPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.CameraPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CameraPacket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CameraPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.CameraPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.CameraPacket)
    MergeFrom(*source);
  }
}

void CameraPacket::MergeFrom(const CameraPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.CameraPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.serialnumber() != 0) {
    set_serialnumber(from.serialnumber());
  }
  if (from.delta_x() != 0) {
    set_delta_x(from.delta_x());
  }
  if (from.delta_y() != 0) {
    set_delta_y(from.delta_y());
  }
  if (from.delta_z() != 0) {
    set_delta_z(from.delta_z());
  }
  if (from.delta_vx() != 0) {
    set_delta_vx(from.delta_vx());
  }
  if (from.delta_vy() != 0) {
    set_delta_vy(from.delta_vy());
  }
  if (from.delta_vz() != 0) {
    set_delta_vz(from.delta_vz());
  }
}

void CameraPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.CameraPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CameraPacket::CopyFrom(const CameraPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.CameraPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CameraPacket::IsInitialized() const {

  return true;
}

void CameraPacket::Swap(CameraPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CameraPacket::InternalSwap(CameraPacket* other) {
  std::swap(type_, other->type_);
  std::swap(serialnumber_, other->serialnumber_);
  std::swap(delta_x_, other->delta_x_);
  std::swap(delta_y_, other->delta_y_);
  std::swap(delta_z_, other->delta_z_);
  std::swap(delta_vx_, other->delta_vx_);
  std::swap(delta_vy_, other->delta_vy_);
  std::swap(delta_vz_, other->delta_vz_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CameraPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CameraPacket_descriptor_;
  metadata.reflection = CameraPacket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CameraPacket

// optional .packet.PacketType type = 1;
void CameraPacket::clear_type() {
  type_ = 0;
}
 ::packet::PacketType CameraPacket::type() const {
  // @@protoc_insertion_point(field_get:packet.CameraPacket.type)
  return static_cast< ::packet::PacketType >(type_);
}
 void CameraPacket::set_type(::packet::PacketType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:packet.CameraPacket.type)
}

// optional uint32 serialNumber = 2;
void CameraPacket::clear_serialnumber() {
  serialnumber_ = 0u;
}
 ::google::protobuf::uint32 CameraPacket::serialnumber() const {
  // @@protoc_insertion_point(field_get:packet.CameraPacket.serialNumber)
  return serialnumber_;
}
 void CameraPacket::set_serialnumber(::google::protobuf::uint32 value) {
  
  serialnumber_ = value;
  // @@protoc_insertion_point(field_set:packet.CameraPacket.serialNumber)
}

// optional uint32 delta_x = 3;
void CameraPacket::clear_delta_x() {
  delta_x_ = 0u;
}
 ::google::protobuf::uint32 CameraPacket::delta_x() const {
  // @@protoc_insertion_point(field_get:packet.CameraPacket.delta_x)
  return delta_x_;
}
 void CameraPacket::set_delta_x(::google::protobuf::uint32 value) {
  
  delta_x_ = value;
  // @@protoc_insertion_point(field_set:packet.CameraPacket.delta_x)
}

// optional uint32 delta_y = 4;
void CameraPacket::clear_delta_y() {
  delta_y_ = 0u;
}
 ::google::protobuf::uint32 CameraPacket::delta_y() const {
  // @@protoc_insertion_point(field_get:packet.CameraPacket.delta_y)
  return delta_y_;
}
 void CameraPacket::set_delta_y(::google::protobuf::uint32 value) {
  
  delta_y_ = value;
  // @@protoc_insertion_point(field_set:packet.CameraPacket.delta_y)
}

// optional uint32 delta_z = 5;
void CameraPacket::clear_delta_z() {
  delta_z_ = 0u;
}
 ::google::protobuf::uint32 CameraPacket::delta_z() const {
  // @@protoc_insertion_point(field_get:packet.CameraPacket.delta_z)
  return delta_z_;
}
 void CameraPacket::set_delta_z(::google::protobuf::uint32 value) {
  
  delta_z_ = value;
  // @@protoc_insertion_point(field_set:packet.CameraPacket.delta_z)
}

// optional uint32 delta_vx = 6;
void CameraPacket::clear_delta_vx() {
  delta_vx_ = 0u;
}
 ::google::protobuf::uint32 CameraPacket::delta_vx() const {
  // @@protoc_insertion_point(field_get:packet.CameraPacket.delta_vx)
  return delta_vx_;
}
 void CameraPacket::set_delta_vx(::google::protobuf::uint32 value) {
  
  delta_vx_ = value;
  // @@protoc_insertion_point(field_set:packet.CameraPacket.delta_vx)
}

// optional uint32 delta_vy = 7;
void CameraPacket::clear_delta_vy() {
  delta_vy_ = 0u;
}
 ::google::protobuf::uint32 CameraPacket::delta_vy() const {
  // @@protoc_insertion_point(field_get:packet.CameraPacket.delta_vy)
  return delta_vy_;
}
 void CameraPacket::set_delta_vy(::google::protobuf::uint32 value) {
  
  delta_vy_ = value;
  // @@protoc_insertion_point(field_set:packet.CameraPacket.delta_vy)
}

// optional uint32 delta_vz = 8;
void CameraPacket::clear_delta_vz() {
  delta_vz_ = 0u;
}
 ::google::protobuf::uint32 CameraPacket::delta_vz() const {
  // @@protoc_insertion_point(field_get:packet.CameraPacket.delta_vz)
  return delta_vz_;
}
 void CameraPacket::set_delta_vz(::google::protobuf::uint32 value) {
  
  delta_vz_ = value;
  // @@protoc_insertion_point(field_set:packet.CameraPacket.delta_vz)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImagePacket::kTypeFieldNumber;
const int ImagePacket::kSerialNumberFieldNumber;
const int ImagePacket::kStatusFieldNumber;
const int ImagePacket::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImagePacket::ImagePacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.ImagePacket)
}

void ImagePacket::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ImagePacket::ImagePacket(const ImagePacket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet.ImagePacket)
}

void ImagePacket::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
  serialnumber_ = 0u;
  status_ = 0u;
  size_ = 0u;
}

ImagePacket::~ImagePacket() {
  // @@protoc_insertion_point(destructor:packet.ImagePacket)
  SharedDtor();
}

void ImagePacket::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ImagePacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImagePacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ImagePacket_descriptor_;
}

const ImagePacket& ImagePacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_packet_2eproto();
  return *default_instance_;
}

ImagePacket* ImagePacket::default_instance_ = NULL;

ImagePacket* ImagePacket::New(::google::protobuf::Arena* arena) const {
  ImagePacket* n = new ImagePacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImagePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.ImagePacket)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ImagePacket, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ImagePacket*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, size_);

#undef ZR_HELPER_
#undef ZR_

}

bool ImagePacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.ImagePacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .packet.PacketType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::packet::PacketType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_serialNumber;
        break;
      }

      // optional uint32 serialNumber = 2;
      case 2: {
        if (tag == 16) {
         parse_serialNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serialnumber_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // optional uint32 status = 3;
      case 3: {
        if (tag == 24) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_size;
        break;
      }

      // optional uint32 size = 4;
      case 4: {
        if (tag == 32) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.ImagePacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.ImagePacket)
  return false;
#undef DO_
}

void ImagePacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.ImagePacket)
  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional uint32 serialNumber = 2;
  if (this->serialnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->serialnumber(), output);
  }

  // optional uint32 status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
  }

  // optional uint32 size = 4;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->size(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet.ImagePacket)
}

::google::protobuf::uint8* ImagePacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.ImagePacket)
  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional uint32 serialNumber = 2;
  if (this->serialnumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->serialnumber(), target);
  }

  // optional uint32 status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->status(), target);
  }

  // optional uint32 size = 4;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet.ImagePacket)
  return target;
}

int ImagePacket::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet.ImagePacket)
  int total_size = 0;

  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional uint32 serialNumber = 2;
  if (this->serialnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serialnumber());
  }

  // optional uint32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  // optional uint32 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImagePacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.ImagePacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ImagePacket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ImagePacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.ImagePacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.ImagePacket)
    MergeFrom(*source);
  }
}

void ImagePacket::MergeFrom(const ImagePacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.ImagePacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.serialnumber() != 0) {
    set_serialnumber(from.serialnumber());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void ImagePacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.ImagePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImagePacket::CopyFrom(const ImagePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.ImagePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImagePacket::IsInitialized() const {

  return true;
}

void ImagePacket::Swap(ImagePacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImagePacket::InternalSwap(ImagePacket* other) {
  std::swap(type_, other->type_);
  std::swap(serialnumber_, other->serialnumber_);
  std::swap(status_, other->status_);
  std::swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImagePacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ImagePacket_descriptor_;
  metadata.reflection = ImagePacket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImagePacket

// optional .packet.PacketType type = 1;
void ImagePacket::clear_type() {
  type_ = 0;
}
 ::packet::PacketType ImagePacket::type() const {
  // @@protoc_insertion_point(field_get:packet.ImagePacket.type)
  return static_cast< ::packet::PacketType >(type_);
}
 void ImagePacket::set_type(::packet::PacketType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:packet.ImagePacket.type)
}

// optional uint32 serialNumber = 2;
void ImagePacket::clear_serialnumber() {
  serialnumber_ = 0u;
}
 ::google::protobuf::uint32 ImagePacket::serialnumber() const {
  // @@protoc_insertion_point(field_get:packet.ImagePacket.serialNumber)
  return serialnumber_;
}
 void ImagePacket::set_serialnumber(::google::protobuf::uint32 value) {
  
  serialnumber_ = value;
  // @@protoc_insertion_point(field_set:packet.ImagePacket.serialNumber)
}

// optional uint32 status = 3;
void ImagePacket::clear_status() {
  status_ = 0u;
}
 ::google::protobuf::uint32 ImagePacket::status() const {
  // @@protoc_insertion_point(field_get:packet.ImagePacket.status)
  return status_;
}
 void ImagePacket::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:packet.ImagePacket.status)
}

// optional uint32 size = 4;
void ImagePacket::clear_size() {
  size_ = 0u;
}
 ::google::protobuf::uint32 ImagePacket::size() const {
  // @@protoc_insertion_point(field_get:packet.ImagePacket.size)
  return size_;
}
 void ImagePacket::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:packet.ImagePacket.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndingPacket::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndingPacket::EndingPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.EndingPacket)
}

void EndingPacket::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EndingPacket::EndingPacket(const EndingPacket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packet.EndingPacket)
}

void EndingPacket::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
}

EndingPacket::~EndingPacket() {
  // @@protoc_insertion_point(destructor:packet.EndingPacket)
  SharedDtor();
}

void EndingPacket::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EndingPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndingPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EndingPacket_descriptor_;
}

const EndingPacket& EndingPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_packet_2eproto();
  return *default_instance_;
}

EndingPacket* EndingPacket::default_instance_ = NULL;

EndingPacket* EndingPacket::New(::google::protobuf::Arena* arena) const {
  EndingPacket* n = new EndingPacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndingPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.EndingPacket)
  type_ = 0;
}

bool EndingPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.EndingPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .packet.PacketType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::packet::PacketType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.EndingPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.EndingPacket)
  return false;
#undef DO_
}

void EndingPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.EndingPacket)
  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:packet.EndingPacket)
}

::google::protobuf::uint8* EndingPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packet.EndingPacket)
  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packet.EndingPacket)
  return target;
}

int EndingPacket::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packet.EndingPacket)
  int total_size = 0;

  // optional .packet.PacketType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndingPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.EndingPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EndingPacket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EndingPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.EndingPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.EndingPacket)
    MergeFrom(*source);
  }
}

void EndingPacket::MergeFrom(const EndingPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.EndingPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void EndingPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.EndingPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndingPacket::CopyFrom(const EndingPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.EndingPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndingPacket::IsInitialized() const {

  return true;
}

void EndingPacket::Swap(EndingPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndingPacket::InternalSwap(EndingPacket* other) {
  std::swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndingPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EndingPacket_descriptor_;
  metadata.reflection = EndingPacket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EndingPacket

// optional .packet.PacketType type = 1;
void EndingPacket::clear_type() {
  type_ = 0;
}
 ::packet::PacketType EndingPacket::type() const {
  // @@protoc_insertion_point(field_get:packet.EndingPacket.type)
  return static_cast< ::packet::PacketType >(type_);
}
 void EndingPacket::set_type(::packet::PacketType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:packet.EndingPacket.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace packet

// @@protoc_insertion_point(global_scope)
