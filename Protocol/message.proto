syntax = "proto3";

package StreamingFormat;


enum MessageType {
  MsgInit = 0;
  MsgDefaultPos = 1;
  MsgCameraInfo = 2;
  MsgImage = 3;
  MsgEnding = 4;
  MsgControl = 5;
}


message Init {

  uint32 width = 2;
  uint32 height = 3;
  uint32 moduleID = 4;

  // Time format ?
}

message DefaultPos {

  float x = 2;
  float y = 3;
  float z = 4;
  float vx = 5;
  float vy = 6;
  float vz = 7;
}

enum ImageQuality{
  LOW = 0;
  HIGH = 1;
}

message Camera {
  uint32 serialNumber = 2;
  float delta_x = 3;
  float delta_y = 4;
  float delta_z = 5;
  float delta_vx = 6;
  float delta_vy = 7;
  float delta_vz = 8;
  ImageQuality imageQuality = 9;


}

enum EditOperation {
  START = 0;
  FINISH = 1;
  UPDATE = 2;
  MODEL_LIST = 3;
  SET_MODEL_ID = 4;
}

message Editing {
  EditOperation op = 1;
  // screen x are only valid in UPDATE op
  float screen_x = 2;
  float screen_y = 3;
  // model_ids is only valid in MODEL_LIST op
  repeated int32 model_ids = 4;
  // model_id is only valid in SET_MODEL_ID op
  int32 model_id = 5;
}

message Control {
  repeated uint32 drop_index = 1;
  uint32 save_frame = 2;  
  uint32 change_scene = 3;
  Editing editingMsg = 4;

}


enum ImageType {
  FULL_INDEX = 0;
  ODD_INDEX = 1;
  EVEN_INDEX = 2;
}

message Image {

  uint32 serialNumber = 2;
  uint32 status = 3;
  // time ?
  uint32 byteSize = 4;
  bytes imageData = 5;

  ImageType imageType = 6;
}

message Ending {

}


message StreamingMessage {

  MessageType type = 1;
  Init initMsg = 2;
  DefaultPos defaultPosMsg = 3;
  Camera cameraMsg = 4;
  Image imageMsg = 5;
  Ending endingMsg = 6;
  Control controlMsg = 7;
}
