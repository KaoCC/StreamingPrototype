// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace StreamingFormat {
class Camera;
class CameraDefaultTypeInternal;
extern CameraDefaultTypeInternal _Camera_default_instance_;
class Control;
class ControlDefaultTypeInternal;
extern ControlDefaultTypeInternal _Control_default_instance_;
class DefaultPos;
class DefaultPosDefaultTypeInternal;
extern DefaultPosDefaultTypeInternal _DefaultPos_default_instance_;
class Ending;
class EndingDefaultTypeInternal;
extern EndingDefaultTypeInternal _Ending_default_instance_;
class Image;
class ImageDefaultTypeInternal;
extern ImageDefaultTypeInternal _Image_default_instance_;
class Init;
class InitDefaultTypeInternal;
extern InitDefaultTypeInternal _Init_default_instance_;
class StreamingMessage;
class StreamingMessageDefaultTypeInternal;
extern StreamingMessageDefaultTypeInternal _StreamingMessage_default_instance_;
}  // namespace StreamingFormat

namespace StreamingFormat {

namespace protobuf_message_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_message_2eproto

enum MessageType {
  MsgInit = 0,
  MsgDefaultPos = 1,
  MsgCameraInfo = 2,
  MsgImage = 3,
  MsgEnding = 4,
  MsgControl = 5,
  MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = MsgInit;
const MessageType MessageType_MAX = MsgControl;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
// ===================================================================

class Init : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StreamingFormat.Init) */ {
 public:
  Init();
  virtual ~Init();

  Init(const Init& from);

  inline Init& operator=(const Init& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Init& default_instance();

  static inline const Init* internal_default_instance() {
    return reinterpret_cast<const Init*>(
               &_Init_default_instance_);
  }

  void Swap(Init* other);

  // implements Message ----------------------------------------------

  inline Init* New() const PROTOBUF_FINAL { return New(NULL); }

  Init* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Init& from);
  void MergeFrom(const Init& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Init* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 width = 2;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // uint32 height = 3;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // uint32 moduleID = 4;
  void clear_moduleid();
  static const int kModuleIDFieldNumber = 4;
  ::google::protobuf::uint32 moduleid() const;
  void set_moduleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:StreamingFormat.Init)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 moduleid_;
  mutable int _cached_size_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DefaultPos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StreamingFormat.DefaultPos) */ {
 public:
  DefaultPos();
  virtual ~DefaultPos();

  DefaultPos(const DefaultPos& from);

  inline DefaultPos& operator=(const DefaultPos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DefaultPos& default_instance();

  static inline const DefaultPos* internal_default_instance() {
    return reinterpret_cast<const DefaultPos*>(
               &_DefaultPos_default_instance_);
  }

  void Swap(DefaultPos* other);

  // implements Message ----------------------------------------------

  inline DefaultPos* New() const PROTOBUF_FINAL { return New(NULL); }

  DefaultPos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DefaultPos& from);
  void MergeFrom(const DefaultPos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DefaultPos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // float y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // float z = 4;
  void clear_z();
  static const int kZFieldNumber = 4;
  float z() const;
  void set_z(float value);

  // float vx = 5;
  void clear_vx();
  static const int kVxFieldNumber = 5;
  float vx() const;
  void set_vx(float value);

  // float vy = 6;
  void clear_vy();
  static const int kVyFieldNumber = 6;
  float vy() const;
  void set_vy(float value);

  // float vz = 7;
  void clear_vz();
  static const int kVzFieldNumber = 7;
  float vz() const;
  void set_vz(float value);

  // @@protoc_insertion_point(class_scope:StreamingFormat.DefaultPos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  float vx_;
  float vy_;
  float vz_;
  mutable int _cached_size_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Camera : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StreamingFormat.Camera) */ {
 public:
  Camera();
  virtual ~Camera();

  Camera(const Camera& from);

  inline Camera& operator=(const Camera& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Camera& default_instance();

  static inline const Camera* internal_default_instance() {
    return reinterpret_cast<const Camera*>(
               &_Camera_default_instance_);
  }

  void Swap(Camera* other);

  // implements Message ----------------------------------------------

  inline Camera* New() const PROTOBUF_FINAL { return New(NULL); }

  Camera* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Camera& from);
  void MergeFrom(const Camera& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Camera* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 serialNumber = 2;
  void clear_serialnumber();
  static const int kSerialNumberFieldNumber = 2;
  ::google::protobuf::uint32 serialnumber() const;
  void set_serialnumber(::google::protobuf::uint32 value);

  // float delta_x = 3;
  void clear_delta_x();
  static const int kDeltaXFieldNumber = 3;
  float delta_x() const;
  void set_delta_x(float value);

  // float delta_y = 4;
  void clear_delta_y();
  static const int kDeltaYFieldNumber = 4;
  float delta_y() const;
  void set_delta_y(float value);

  // float delta_z = 5;
  void clear_delta_z();
  static const int kDeltaZFieldNumber = 5;
  float delta_z() const;
  void set_delta_z(float value);

  // float delta_vx = 6;
  void clear_delta_vx();
  static const int kDeltaVxFieldNumber = 6;
  float delta_vx() const;
  void set_delta_vx(float value);

  // float delta_vy = 7;
  void clear_delta_vy();
  static const int kDeltaVyFieldNumber = 7;
  float delta_vy() const;
  void set_delta_vy(float value);

  // float delta_vz = 8;
  void clear_delta_vz();
  static const int kDeltaVzFieldNumber = 8;
  float delta_vz() const;
  void set_delta_vz(float value);

  // @@protoc_insertion_point(class_scope:StreamingFormat.Camera)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 serialnumber_;
  float delta_x_;
  float delta_y_;
  float delta_z_;
  float delta_vx_;
  float delta_vy_;
  float delta_vz_;
  mutable int _cached_size_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Control : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StreamingFormat.Control) */ {
 public:
  Control();
  virtual ~Control();

  Control(const Control& from);

  inline Control& operator=(const Control& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Control& default_instance();

  static inline const Control* internal_default_instance() {
    return reinterpret_cast<const Control*>(
               &_Control_default_instance_);
  }

  void Swap(Control* other);

  // implements Message ----------------------------------------------

  inline Control* New() const PROTOBUF_FINAL { return New(NULL); }

  Control* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Control& from);
  void MergeFrom(const Control& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Control* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 drop_index = 1;
  int drop_index_size() const;
  void clear_drop_index();
  static const int kDropIndexFieldNumber = 1;
  ::google::protobuf::uint32 drop_index(int index) const;
  void set_drop_index(int index, ::google::protobuf::uint32 value);
  void add_drop_index(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      drop_index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_drop_index();

  // uint32 save_frame = 2;
  void clear_save_frame();
  static const int kSaveFrameFieldNumber = 2;
  ::google::protobuf::uint32 save_frame() const;
  void set_save_frame(::google::protobuf::uint32 value);

  // uint32 change_scene = 3;
  void clear_change_scene();
  static const int kChangeSceneFieldNumber = 3;
  ::google::protobuf::uint32 change_scene() const;
  void set_change_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:StreamingFormat.Control)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > drop_index_;
  mutable int _drop_index_cached_byte_size_;
  ::google::protobuf::uint32 save_frame_;
  ::google::protobuf::uint32 change_scene_;
  mutable int _cached_size_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Image : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StreamingFormat.Image) */ {
 public:
  Image();
  virtual ~Image();

  Image(const Image& from);

  inline Image& operator=(const Image& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Image& default_instance();

  static inline const Image* internal_default_instance() {
    return reinterpret_cast<const Image*>(
               &_Image_default_instance_);
  }

  void Swap(Image* other);

  // implements Message ----------------------------------------------

  inline Image* New() const PROTOBUF_FINAL { return New(NULL); }

  Image* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Image& from);
  void MergeFrom(const Image& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Image* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes imageData = 5;
  void clear_imagedata();
  static const int kImageDataFieldNumber = 5;
  const ::std::string& imagedata() const;
  void set_imagedata(const ::std::string& value);
  #if LANG_CXX11
  void set_imagedata(::std::string&& value);
  #endif
  void set_imagedata(const char* value);
  void set_imagedata(const void* value, size_t size);
  ::std::string* mutable_imagedata();
  ::std::string* release_imagedata();
  void set_allocated_imagedata(::std::string* imagedata);

  // uint32 serialNumber = 2;
  void clear_serialnumber();
  static const int kSerialNumberFieldNumber = 2;
  ::google::protobuf::uint32 serialnumber() const;
  void set_serialnumber(::google::protobuf::uint32 value);

  // uint32 status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // uint32 byteSize = 4;
  void clear_bytesize();
  static const int kByteSizeFieldNumber = 4;
  ::google::protobuf::uint32 bytesize() const;
  void set_bytesize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:StreamingFormat.Image)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr imagedata_;
  ::google::protobuf::uint32 serialnumber_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 bytesize_;
  mutable int _cached_size_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ending : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StreamingFormat.Ending) */ {
 public:
  Ending();
  virtual ~Ending();

  Ending(const Ending& from);

  inline Ending& operator=(const Ending& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ending& default_instance();

  static inline const Ending* internal_default_instance() {
    return reinterpret_cast<const Ending*>(
               &_Ending_default_instance_);
  }

  void Swap(Ending* other);

  // implements Message ----------------------------------------------

  inline Ending* New() const PROTOBUF_FINAL { return New(NULL); }

  Ending* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Ending& from);
  void MergeFrom(const Ending& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Ending* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:StreamingFormat.Ending)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StreamingMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StreamingFormat.StreamingMessage) */ {
 public:
  StreamingMessage();
  virtual ~StreamingMessage();

  StreamingMessage(const StreamingMessage& from);

  inline StreamingMessage& operator=(const StreamingMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamingMessage& default_instance();

  static inline const StreamingMessage* internal_default_instance() {
    return reinterpret_cast<const StreamingMessage*>(
               &_StreamingMessage_default_instance_);
  }

  void Swap(StreamingMessage* other);

  // implements Message ----------------------------------------------

  inline StreamingMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  StreamingMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StreamingMessage& from);
  void MergeFrom(const StreamingMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StreamingMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .StreamingFormat.Init initMsg = 2;
  bool has_initmsg() const;
  void clear_initmsg();
  static const int kInitMsgFieldNumber = 2;
  const ::StreamingFormat::Init& initmsg() const;
  ::StreamingFormat::Init* mutable_initmsg();
  ::StreamingFormat::Init* release_initmsg();
  void set_allocated_initmsg(::StreamingFormat::Init* initmsg);

  // .StreamingFormat.DefaultPos defaultPosMsg = 3;
  bool has_defaultposmsg() const;
  void clear_defaultposmsg();
  static const int kDefaultPosMsgFieldNumber = 3;
  const ::StreamingFormat::DefaultPos& defaultposmsg() const;
  ::StreamingFormat::DefaultPos* mutable_defaultposmsg();
  ::StreamingFormat::DefaultPos* release_defaultposmsg();
  void set_allocated_defaultposmsg(::StreamingFormat::DefaultPos* defaultposmsg);

  // .StreamingFormat.Camera cameraMsg = 4;
  bool has_cameramsg() const;
  void clear_cameramsg();
  static const int kCameraMsgFieldNumber = 4;
  const ::StreamingFormat::Camera& cameramsg() const;
  ::StreamingFormat::Camera* mutable_cameramsg();
  ::StreamingFormat::Camera* release_cameramsg();
  void set_allocated_cameramsg(::StreamingFormat::Camera* cameramsg);

  // .StreamingFormat.Image imageMsg = 5;
  bool has_imagemsg() const;
  void clear_imagemsg();
  static const int kImageMsgFieldNumber = 5;
  const ::StreamingFormat::Image& imagemsg() const;
  ::StreamingFormat::Image* mutable_imagemsg();
  ::StreamingFormat::Image* release_imagemsg();
  void set_allocated_imagemsg(::StreamingFormat::Image* imagemsg);

  // .StreamingFormat.Ending endingMsg = 6;
  bool has_endingmsg() const;
  void clear_endingmsg();
  static const int kEndingMsgFieldNumber = 6;
  const ::StreamingFormat::Ending& endingmsg() const;
  ::StreamingFormat::Ending* mutable_endingmsg();
  ::StreamingFormat::Ending* release_endingmsg();
  void set_allocated_endingmsg(::StreamingFormat::Ending* endingmsg);

  // .StreamingFormat.MessageType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::StreamingFormat::MessageType type() const;
  void set_type(::StreamingFormat::MessageType value);

  // @@protoc_insertion_point(class_scope:StreamingFormat.StreamingMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::StreamingFormat::Init* initmsg_;
  ::StreamingFormat::DefaultPos* defaultposmsg_;
  ::StreamingFormat::Camera* cameramsg_;
  ::StreamingFormat::Image* imagemsg_;
  ::StreamingFormat::Ending* endingmsg_;
  int type_;
  mutable int _cached_size_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Init

// uint32 width = 2;
inline void Init::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 Init::width() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Init.width)
  return width_;
}
inline void Init::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Init.width)
}

// uint32 height = 3;
inline void Init::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 Init::height() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Init.height)
  return height_;
}
inline void Init::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Init.height)
}

// uint32 moduleID = 4;
inline void Init::clear_moduleid() {
  moduleid_ = 0u;
}
inline ::google::protobuf::uint32 Init::moduleid() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Init.moduleID)
  return moduleid_;
}
inline void Init::set_moduleid(::google::protobuf::uint32 value) {
  
  moduleid_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Init.moduleID)
}

// -------------------------------------------------------------------

// DefaultPos

// float x = 2;
inline void DefaultPos::clear_x() {
  x_ = 0;
}
inline float DefaultPos::x() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.DefaultPos.x)
  return x_;
}
inline void DefaultPos::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.DefaultPos.x)
}

// float y = 3;
inline void DefaultPos::clear_y() {
  y_ = 0;
}
inline float DefaultPos::y() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.DefaultPos.y)
  return y_;
}
inline void DefaultPos::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.DefaultPos.y)
}

// float z = 4;
inline void DefaultPos::clear_z() {
  z_ = 0;
}
inline float DefaultPos::z() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.DefaultPos.z)
  return z_;
}
inline void DefaultPos::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.DefaultPos.z)
}

// float vx = 5;
inline void DefaultPos::clear_vx() {
  vx_ = 0;
}
inline float DefaultPos::vx() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.DefaultPos.vx)
  return vx_;
}
inline void DefaultPos::set_vx(float value) {
  
  vx_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.DefaultPos.vx)
}

// float vy = 6;
inline void DefaultPos::clear_vy() {
  vy_ = 0;
}
inline float DefaultPos::vy() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.DefaultPos.vy)
  return vy_;
}
inline void DefaultPos::set_vy(float value) {
  
  vy_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.DefaultPos.vy)
}

// float vz = 7;
inline void DefaultPos::clear_vz() {
  vz_ = 0;
}
inline float DefaultPos::vz() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.DefaultPos.vz)
  return vz_;
}
inline void DefaultPos::set_vz(float value) {
  
  vz_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.DefaultPos.vz)
}

// -------------------------------------------------------------------

// Camera

// uint32 serialNumber = 2;
inline void Camera::clear_serialnumber() {
  serialnumber_ = 0u;
}
inline ::google::protobuf::uint32 Camera::serialnumber() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Camera.serialNumber)
  return serialnumber_;
}
inline void Camera::set_serialnumber(::google::protobuf::uint32 value) {
  
  serialnumber_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Camera.serialNumber)
}

// float delta_x = 3;
inline void Camera::clear_delta_x() {
  delta_x_ = 0;
}
inline float Camera::delta_x() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Camera.delta_x)
  return delta_x_;
}
inline void Camera::set_delta_x(float value) {
  
  delta_x_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Camera.delta_x)
}

// float delta_y = 4;
inline void Camera::clear_delta_y() {
  delta_y_ = 0;
}
inline float Camera::delta_y() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Camera.delta_y)
  return delta_y_;
}
inline void Camera::set_delta_y(float value) {
  
  delta_y_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Camera.delta_y)
}

// float delta_z = 5;
inline void Camera::clear_delta_z() {
  delta_z_ = 0;
}
inline float Camera::delta_z() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Camera.delta_z)
  return delta_z_;
}
inline void Camera::set_delta_z(float value) {
  
  delta_z_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Camera.delta_z)
}

// float delta_vx = 6;
inline void Camera::clear_delta_vx() {
  delta_vx_ = 0;
}
inline float Camera::delta_vx() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Camera.delta_vx)
  return delta_vx_;
}
inline void Camera::set_delta_vx(float value) {
  
  delta_vx_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Camera.delta_vx)
}

// float delta_vy = 7;
inline void Camera::clear_delta_vy() {
  delta_vy_ = 0;
}
inline float Camera::delta_vy() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Camera.delta_vy)
  return delta_vy_;
}
inline void Camera::set_delta_vy(float value) {
  
  delta_vy_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Camera.delta_vy)
}

// float delta_vz = 8;
inline void Camera::clear_delta_vz() {
  delta_vz_ = 0;
}
inline float Camera::delta_vz() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Camera.delta_vz)
  return delta_vz_;
}
inline void Camera::set_delta_vz(float value) {
  
  delta_vz_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Camera.delta_vz)
}

// -------------------------------------------------------------------

// Control

// repeated uint32 drop_index = 1;
inline int Control::drop_index_size() const {
  return drop_index_.size();
}
inline void Control::clear_drop_index() {
  drop_index_.Clear();
}
inline ::google::protobuf::uint32 Control::drop_index(int index) const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Control.drop_index)
  return drop_index_.Get(index);
}
inline void Control::set_drop_index(int index, ::google::protobuf::uint32 value) {
  drop_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:StreamingFormat.Control.drop_index)
}
inline void Control::add_drop_index(::google::protobuf::uint32 value) {
  drop_index_.Add(value);
  // @@protoc_insertion_point(field_add:StreamingFormat.Control.drop_index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Control::drop_index() const {
  // @@protoc_insertion_point(field_list:StreamingFormat.Control.drop_index)
  return drop_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Control::mutable_drop_index() {
  // @@protoc_insertion_point(field_mutable_list:StreamingFormat.Control.drop_index)
  return &drop_index_;
}

// uint32 save_frame = 2;
inline void Control::clear_save_frame() {
  save_frame_ = 0u;
}
inline ::google::protobuf::uint32 Control::save_frame() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Control.save_frame)
  return save_frame_;
}
inline void Control::set_save_frame(::google::protobuf::uint32 value) {
  
  save_frame_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Control.save_frame)
}

// uint32 change_scene = 3;
inline void Control::clear_change_scene() {
  change_scene_ = 0u;
}
inline ::google::protobuf::uint32 Control::change_scene() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Control.change_scene)
  return change_scene_;
}
inline void Control::set_change_scene(::google::protobuf::uint32 value) {
  
  change_scene_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Control.change_scene)
}

// -------------------------------------------------------------------

// Image

// uint32 serialNumber = 2;
inline void Image::clear_serialnumber() {
  serialnumber_ = 0u;
}
inline ::google::protobuf::uint32 Image::serialnumber() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Image.serialNumber)
  return serialnumber_;
}
inline void Image::set_serialnumber(::google::protobuf::uint32 value) {
  
  serialnumber_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Image.serialNumber)
}

// uint32 status = 3;
inline void Image::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 Image::status() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Image.status)
  return status_;
}
inline void Image::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Image.status)
}

// uint32 byteSize = 4;
inline void Image::clear_bytesize() {
  bytesize_ = 0u;
}
inline ::google::protobuf::uint32 Image::bytesize() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Image.byteSize)
  return bytesize_;
}
inline void Image::set_bytesize(::google::protobuf::uint32 value) {
  
  bytesize_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.Image.byteSize)
}

// bytes imageData = 5;
inline void Image::clear_imagedata() {
  imagedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Image::imagedata() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.Image.imageData)
  return imagedata_.GetNoArena();
}
inline void Image::set_imagedata(const ::std::string& value) {
  
  imagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:StreamingFormat.Image.imageData)
}
#if LANG_CXX11
inline void Image::set_imagedata(::std::string&& value) {
  
  imagedata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:StreamingFormat.Image.imageData)
}
#endif
inline void Image::set_imagedata(const char* value) {
  
  imagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:StreamingFormat.Image.imageData)
}
inline void Image::set_imagedata(const void* value, size_t size) {
  
  imagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:StreamingFormat.Image.imageData)
}
inline ::std::string* Image::mutable_imagedata() {
  
  // @@protoc_insertion_point(field_mutable:StreamingFormat.Image.imageData)
  return imagedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Image::release_imagedata() {
  // @@protoc_insertion_point(field_release:StreamingFormat.Image.imageData)
  
  return imagedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Image::set_allocated_imagedata(::std::string* imagedata) {
  if (imagedata != NULL) {
    
  } else {
    
  }
  imagedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imagedata);
  // @@protoc_insertion_point(field_set_allocated:StreamingFormat.Image.imageData)
}

// -------------------------------------------------------------------

// Ending

// -------------------------------------------------------------------

// StreamingMessage

// .StreamingFormat.MessageType type = 1;
inline void StreamingMessage::clear_type() {
  type_ = 0;
}
inline ::StreamingFormat::MessageType StreamingMessage::type() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.StreamingMessage.type)
  return static_cast< ::StreamingFormat::MessageType >(type_);
}
inline void StreamingMessage::set_type(::StreamingFormat::MessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:StreamingFormat.StreamingMessage.type)
}

// .StreamingFormat.Init initMsg = 2;
inline bool StreamingMessage::has_initmsg() const {
  return this != internal_default_instance() && initmsg_ != NULL;
}
inline void StreamingMessage::clear_initmsg() {
  if (GetArenaNoVirtual() == NULL && initmsg_ != NULL) delete initmsg_;
  initmsg_ = NULL;
}
inline const ::StreamingFormat::Init& StreamingMessage::initmsg() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.StreamingMessage.initMsg)
  return initmsg_ != NULL ? *initmsg_
                         : *::StreamingFormat::Init::internal_default_instance();
}
inline ::StreamingFormat::Init* StreamingMessage::mutable_initmsg() {
  
  if (initmsg_ == NULL) {
    initmsg_ = new ::StreamingFormat::Init;
  }
  // @@protoc_insertion_point(field_mutable:StreamingFormat.StreamingMessage.initMsg)
  return initmsg_;
}
inline ::StreamingFormat::Init* StreamingMessage::release_initmsg() {
  // @@protoc_insertion_point(field_release:StreamingFormat.StreamingMessage.initMsg)
  
  ::StreamingFormat::Init* temp = initmsg_;
  initmsg_ = NULL;
  return temp;
}
inline void StreamingMessage::set_allocated_initmsg(::StreamingFormat::Init* initmsg) {
  delete initmsg_;
  initmsg_ = initmsg;
  if (initmsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:StreamingFormat.StreamingMessage.initMsg)
}

// .StreamingFormat.DefaultPos defaultPosMsg = 3;
inline bool StreamingMessage::has_defaultposmsg() const {
  return this != internal_default_instance() && defaultposmsg_ != NULL;
}
inline void StreamingMessage::clear_defaultposmsg() {
  if (GetArenaNoVirtual() == NULL && defaultposmsg_ != NULL) delete defaultposmsg_;
  defaultposmsg_ = NULL;
}
inline const ::StreamingFormat::DefaultPos& StreamingMessage::defaultposmsg() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.StreamingMessage.defaultPosMsg)
  return defaultposmsg_ != NULL ? *defaultposmsg_
                         : *::StreamingFormat::DefaultPos::internal_default_instance();
}
inline ::StreamingFormat::DefaultPos* StreamingMessage::mutable_defaultposmsg() {
  
  if (defaultposmsg_ == NULL) {
    defaultposmsg_ = new ::StreamingFormat::DefaultPos;
  }
  // @@protoc_insertion_point(field_mutable:StreamingFormat.StreamingMessage.defaultPosMsg)
  return defaultposmsg_;
}
inline ::StreamingFormat::DefaultPos* StreamingMessage::release_defaultposmsg() {
  // @@protoc_insertion_point(field_release:StreamingFormat.StreamingMessage.defaultPosMsg)
  
  ::StreamingFormat::DefaultPos* temp = defaultposmsg_;
  defaultposmsg_ = NULL;
  return temp;
}
inline void StreamingMessage::set_allocated_defaultposmsg(::StreamingFormat::DefaultPos* defaultposmsg) {
  delete defaultposmsg_;
  defaultposmsg_ = defaultposmsg;
  if (defaultposmsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:StreamingFormat.StreamingMessage.defaultPosMsg)
}

// .StreamingFormat.Camera cameraMsg = 4;
inline bool StreamingMessage::has_cameramsg() const {
  return this != internal_default_instance() && cameramsg_ != NULL;
}
inline void StreamingMessage::clear_cameramsg() {
  if (GetArenaNoVirtual() == NULL && cameramsg_ != NULL) delete cameramsg_;
  cameramsg_ = NULL;
}
inline const ::StreamingFormat::Camera& StreamingMessage::cameramsg() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.StreamingMessage.cameraMsg)
  return cameramsg_ != NULL ? *cameramsg_
                         : *::StreamingFormat::Camera::internal_default_instance();
}
inline ::StreamingFormat::Camera* StreamingMessage::mutable_cameramsg() {
  
  if (cameramsg_ == NULL) {
    cameramsg_ = new ::StreamingFormat::Camera;
  }
  // @@protoc_insertion_point(field_mutable:StreamingFormat.StreamingMessage.cameraMsg)
  return cameramsg_;
}
inline ::StreamingFormat::Camera* StreamingMessage::release_cameramsg() {
  // @@protoc_insertion_point(field_release:StreamingFormat.StreamingMessage.cameraMsg)
  
  ::StreamingFormat::Camera* temp = cameramsg_;
  cameramsg_ = NULL;
  return temp;
}
inline void StreamingMessage::set_allocated_cameramsg(::StreamingFormat::Camera* cameramsg) {
  delete cameramsg_;
  cameramsg_ = cameramsg;
  if (cameramsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:StreamingFormat.StreamingMessage.cameraMsg)
}

// .StreamingFormat.Image imageMsg = 5;
inline bool StreamingMessage::has_imagemsg() const {
  return this != internal_default_instance() && imagemsg_ != NULL;
}
inline void StreamingMessage::clear_imagemsg() {
  if (GetArenaNoVirtual() == NULL && imagemsg_ != NULL) delete imagemsg_;
  imagemsg_ = NULL;
}
inline const ::StreamingFormat::Image& StreamingMessage::imagemsg() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.StreamingMessage.imageMsg)
  return imagemsg_ != NULL ? *imagemsg_
                         : *::StreamingFormat::Image::internal_default_instance();
}
inline ::StreamingFormat::Image* StreamingMessage::mutable_imagemsg() {
  
  if (imagemsg_ == NULL) {
    imagemsg_ = new ::StreamingFormat::Image;
  }
  // @@protoc_insertion_point(field_mutable:StreamingFormat.StreamingMessage.imageMsg)
  return imagemsg_;
}
inline ::StreamingFormat::Image* StreamingMessage::release_imagemsg() {
  // @@protoc_insertion_point(field_release:StreamingFormat.StreamingMessage.imageMsg)
  
  ::StreamingFormat::Image* temp = imagemsg_;
  imagemsg_ = NULL;
  return temp;
}
inline void StreamingMessage::set_allocated_imagemsg(::StreamingFormat::Image* imagemsg) {
  delete imagemsg_;
  imagemsg_ = imagemsg;
  if (imagemsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:StreamingFormat.StreamingMessage.imageMsg)
}

// .StreamingFormat.Ending endingMsg = 6;
inline bool StreamingMessage::has_endingmsg() const {
  return this != internal_default_instance() && endingmsg_ != NULL;
}
inline void StreamingMessage::clear_endingmsg() {
  if (GetArenaNoVirtual() == NULL && endingmsg_ != NULL) delete endingmsg_;
  endingmsg_ = NULL;
}
inline const ::StreamingFormat::Ending& StreamingMessage::endingmsg() const {
  // @@protoc_insertion_point(field_get:StreamingFormat.StreamingMessage.endingMsg)
  return endingmsg_ != NULL ? *endingmsg_
                         : *::StreamingFormat::Ending::internal_default_instance();
}
inline ::StreamingFormat::Ending* StreamingMessage::mutable_endingmsg() {
  
  if (endingmsg_ == NULL) {
    endingmsg_ = new ::StreamingFormat::Ending;
  }
  // @@protoc_insertion_point(field_mutable:StreamingFormat.StreamingMessage.endingMsg)
  return endingmsg_;
}
inline ::StreamingFormat::Ending* StreamingMessage::release_endingmsg() {
  // @@protoc_insertion_point(field_release:StreamingFormat.StreamingMessage.endingMsg)
  
  ::StreamingFormat::Ending* temp = endingmsg_;
  endingmsg_ = NULL;
  return temp;
}
inline void StreamingMessage::set_allocated_endingmsg(::StreamingFormat::Ending* endingmsg) {
  delete endingmsg_;
  endingmsg_ = endingmsg;
  if (endingmsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:StreamingFormat.StreamingMessage.endingMsg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace StreamingFormat

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::StreamingFormat::MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::StreamingFormat::MessageType>() {
  return ::StreamingFormat::MessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
